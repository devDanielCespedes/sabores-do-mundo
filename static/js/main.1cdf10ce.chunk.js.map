{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/whiteHeartIcon.svg","images/searchIcon.svg","images/profileIcon.svg","images/logoDoAppEscrita.jpg","images/facebookIcon.png","images/instagramIcon.jpg","images/whatsAppIcon.jpg","services/localStorage.js","components/CustomLogin.jsx","redux/actions/recipesActions.js","services/drinkApi.js","services/foodApi.js","services/areaApi.js","components/CustomSearchBar.jsx","components/CustomCardFood.jsx","components/CustomFooter.jsx","components/CustomCartegory.jsx","components/CustomCardSuggested.jsx","components/CustomExploreFoods.jsx","components/CustomExploreDrinks.jsx","components/CustomCardFavoriteRecipe.jsx","components/CustomIngredientsFoods.jsx","components/CustomIngredientsDrinks.jsx","components/CustomDetailsButton.jsx","components/CustomDetailsIngredients.jsx","components/CustomButtonShare.jsx","components/CustomButtonFavorite.jsx","components/CustomInProgressIngredients.jsx","components/CustomDropdown.jsx","pages/Login.jsx","redux/actions/loginAction.js","components/CustomHeader.jsx","pages/Recipes.jsx","pages/DrinksIngredients.jsx","pages/FoodsIngredients.jsx","pages/ExploreDrinks.jsx","pages/ExploreFoods.jsx","components/CustomExplore.jsx","pages/Explore.jsx","pages/FoodsOrigin.jsx","pages/Profile.jsx","pages/RecipeDetails.jsx","pages/FavoriteRecipes.jsx","pages/RecipeInProgress.jsx","pages/NotFound.jsx","components/CustomCardRecipeDone.jsx","pages/DoneRecipes.jsx","Routes.js","App.js","redux/reducer/loginReducer.js","redux/reducer/recipesReducer.js","store/index.js","index.js"],"names":["module","exports","getStorage","key","JSON","parse","localStorage","getItem","setStorage","item","setItem","stringify","CustomLogin","onInputChange","onHandleSubmit","validate","className","src","logo","alt","htmlFor","data-testid","name","aria-describedby","maxLength","placeholder","onChange","type","onClick","disabled","href","target","rel","Facebook","Instagram","WhatsApp","filteredByCategoryAction","filteredByCategory","failedRequest","error","listRecipes","recipes","requestIngredients","ingredients","changeCurrentCategoryAction","category","getDrinkRecipes","searchInput","searchRadio","endpoint","dispatch","a","fetch","response","json","data","drinks","getDrink","recipeId","getSuggestedDrinks","getAllDrinksCategories","randomDrinksApi","getIngredientsDrink","getFoodRecipes","meals","getFood","getSuggestedFoods","getAllFoodCategories","randomFoodsApi","getIngredientsFood","getAllOrigin","CustomSearchBar","props","state","searchHeader","handleInputChange","bind","handleButtonClick","value","this","setState","prevState","dispatchFoodRecipes","dispatchDrinkRecipes","title","dispatchSearchBar","length","alert","id","Component","connect","dispatchUpdateFoodIsFetching","CustomCardFood","index","recipe","recipeType","idMeal","idDrink","style","width","to","strMealThumb","strDrinkThumb","strMeal","strDrink","CustomFooter","drinkIcon","exploreIcon","mealIcon","CustomCartegory","dispatchFoodFilteredByCategory","dispatchDrinkFilteredByCategory","dispatchDrinksRecipes","currentCategory","strCategory","recipesReducer","drinkUrlForFilterByCategory","resquestFilteredByCategory","JSONresponseFiltered","drinksFilteredByCategory","foodUrlForFilterByCategory","foodFilterByCategory","CustomCardSuggested","thumb","Carousel","Caption","CustomExploreFoods","fetchFoodsRandom","CustomExploreDrinks","fetchDrinksRandom","CustomCardFavoriteRecipe","renderDrinkCard","renderFoodCard","favorite","image","alcoholicOrNot","isShared","area","CustomIngredientsFoods","meal","strIngredient","CustomIngredientsDrinks","drink","strIngredient1","CustomDetailsButton","isRedirect","inProgress","verifyRecipeInProgress","localStorageSetUp","cocktails","inProgressRecipes","handleStartButtonClick","CustomDetailsIngredients","ingredientsList","measureList","getIngredientsList","MAX_INDEX","push","filter","ingredient","map","CustomButtonShare","url","copy","testDone","console","log","shareIcon","CustomButtonFavorite","isFavorite","addFavoriteToLocalStorage","removeFavoriteFromLocalStorage","verifyRecipeIsFavorite","favoriteRecipes","some","newFavorite","strArea","strAlcoholic","blackHeartIcon","whiteHeartIcon","CustomInProgressIngredients","handleInputClick","updateIngredientsOnState","updateLocalStorage","verifyIsRecipeIsDone","checked","recipeInProgress","ingredientName","measure","isChecked","getIngredientIsChecked","updatedIngredients","recipeIsDone","isDone","event","CustomDropdown","areaFromOrigin","dispatchArea","allFoods","e","getArea","Login","password","email","buttonDisable","handleSubmit","validaInput","setUpLocalStorage","history","dispatchEmail","dispatchPassword","match","CustomHeader","route","showSearchTopBtn","useState","show","setShow","useHistory","profile","search","Recipes","handleRecipes","renderAlertError","renderRecipes","handleCategories","getTypeOfRecipe","recipesCategories","prevProps","isFetching","isSearchBar","redirectToRecipeDetail","fetchAllRecipes","currentCategoryFood","ingredientsObj","recipeSufixe","MAX_LENGTH","slice","undefined","renderCategories","getRecipe","dispatchInitialCards","JSONRequestAllCAtegories","DrinksIngredients","renderIngredients","handleIngredients","isLoading","dispatchIngredients","idIngredient","Ingredients","FoodsIngredients","ExploreDrinks","ExploreFoods","CustomExplore","Explore","ExploreArea","getOrigin","Profile","getEmailStorage","go","clear","RecipeDetails","fetchRecipe","getYoutubeEmbedUrl","getSuggestedRecipes","verifyRecipeIsDone","suggestedRecipes","params","path","sufixeRecipe","Item","strYoutube","doneRecipes","strInstructions","frame-border","allow","allow-fullscreen","FavoriteRecipes","setStateWithFavoritesLocalStorage","removeFavoriteFromLocalStoage","renderCardsAndBtns","filterFavorites","favoriteFilter","favorites","favoritesLocalStorage","idToRemove","RecipeInProgress","dNow","Date","localdate","getDate","getMonth","getFullYear","doneDate","tags","strTags","split","done","replace","NotFound","CustomCardRecipeDone","DoneRecipes","filterDoneRecipes","Done","filterDone","includes","Rotas","exact","component","render","FoodsOrigin","App","Routes","INITIAL_STATE","action","rootReducer","combineReducers","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.1cdf10ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoDoAppEscrita.260d496f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebookIcon.88a6db57.png\";","module.exports = __webpack_public_path__ + \"static/media/instagramIcon.dc610311.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whatsAppIcon.461089b8.jpg\";","// pega\nexport const getStorage = (key) => JSON.parse(localStorage.getItem(key));\n// coloca\nexport const setStorage = (key, item) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logoDoAppEscrita.jpg';\nimport Facebook from '../images/facebookIcon.png';\nimport Instagram from '../images/instagramIcon.jpg';\nimport WhatsApp from '../images/whatsAppIcon.jpg';\n\nexport default function CustomLogin({\n  onInputChange,\n  onHandleSubmit,\n  validate,\n}) {\n  return (\n    <div className=\"login-content\">\n      <img src={ logo } className=\"login-logo\" alt=\"logo do app\" />\n      <form className=\"form-login-content\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            <input\n              data-testid=\"email-input\"\n              name=\"email\"\n              className=\"form-control\"\n              aria-describedby=\"emailHelp\"\n              maxLength=\"50\"\n              placeholder=\"Email\"\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email-input\" className=\"form-label\">\n            <input\n              data-testid=\"password-input\"\n              maxLength=\"40\"\n              placeholder=\"Senha\"\n              name=\"password\"\n              type=\"password\"\n              aria-describedby=\"emailHelp\"\n              className=\"form-control\"\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={ onHandleSubmit }\n          data-testid=\"login-submit-btn\"\n          disabled={ validate }\n        >\n          Enviar\n        </button>\n      </form>\n      <span className=\"sign-up-text\">Ainda não tem registro?</span>\n      <span><a href=\"/\" className=\"sign-up-click\"> Click aqui</a></span>\n      <hr />\n      <div className=\"social-midia\">\n        <a\n          href=\"http://\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={ Facebook }\n            alt=\"logo do facebook\"\n            className=\"social-media-logo\"\n          />\n        </a>\n        <a\n          href=\"http://\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={ Instagram }\n            alt=\"logo do instagram\"\n            className=\"social-media-logo\"\n          />\n        </a>\n        <a\n          href=\"http://\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={ WhatsApp }\n            alt=\"logo do WhatsApp\"\n            className=\"social-media-logo\"\n          />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nCustomLogin.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  onHandleSubmit: PropTypes.func.isRequired,\n  validate: PropTypes.bool.isRequired,\n};\n","export const REQUEST_RECIPES = 'REQUEST_RECIPES';\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\nexport const LIST_RECIPES = 'LIST_RECIPES';\nexport const FILTERED_BY_CATEGORY = 'FILTERED_BY_CATEGORY';\nexport const REQUEST_INGREDIENTS = 'REQUEST_INGREDIENTS';\nexport const CHANGE_CURRENT_CATEGORY = 'CHANGE_CURRENT_CATEGORY';\nexport const CHANGE_RECIPE_TYPE = 'CHANGE_RECIPE_TYPE';\nexport const CHANGE_SEARCH_BAR = 'CHANGE_SEARCH_BAR';\nexport const REQUEST_AREA = 'REQUEST_AREA';\nexport const REQUEST_AREA_FAILED = 'REQUEST_AREA_FAILED';\nexport const SELECT_AREA = 'SELECT_AREA';\n\nexport const filteredByCategoryAction = (filteredByCategory) => ({\n  type: FILTERED_BY_CATEGORY,\n  filteredByCategory,\n});\n\nexport const requestRecipes = () => ({\n  type: REQUEST_RECIPES,\n});\n\nexport const changeRecipeType = (recipeType) => ({\n  type: CHANGE_RECIPE_TYPE,\n  recipeType,\n});\n\nexport const failedRequest = (error) => ({\n  type: REQUEST_FAILED,\n  error,\n});\n\nexport const listRecipes = (recipes) => ({\n  type: LIST_RECIPES,\n  recipes,\n});\n\nexport const requestIngredients = (ingredients) => ({\n  type: REQUEST_INGREDIENTS,\n  ingredients,\n});\n\nexport const changeCurrentCategoryAction = (category) => ({\n  type: CHANGE_CURRENT_CATEGORY,\n  category,\n});\n\nexport const changeSearchBarAction = () => ({\n  type: CHANGE_SEARCH_BAR,\n});\n\nexport const requestArea = () => ({\n  type: REQUEST_AREA,\n});\n\nexport const requestAreaFailed = (error) => ({\n  type: REQUEST_AREA_FAILED,\n  error,\n});\n\nexport const selectedArea = (meals) => ({\n  type: SELECT_AREA,\n  meals,\n});\n","import {\n  requestRecipes,\n  listRecipes,\n  failedRequest,\n  changeCurrentCategoryAction,\n  filteredByCategoryAction,\n} from '../redux/actions';\n\nexport const getDrinkRecipes = ({ searchInput = '', searchRadio = 's' }) => {\n  let endpoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?${searchRadio}=${searchInput}`;\n  if (searchRadio === 's' || searchRadio === 'f') {\n    endpoint = `https://www.thecocktaildb.com/api/json/v1/1/search.php?${searchRadio}=${searchInput}`;\n  }\n  return async (dispatch) => {\n    dispatch(requestRecipes());\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      dispatch(listRecipes(data.drinks));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nexport const getDrink = async (recipeId) => {\n  const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${recipeId}`;\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getSuggestedDrinks = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getAllDrinksCategories = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const drinksFilteredByCategory = (category) => {\n  let drinkUrlForFilterByCategory = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category.strCategory}`;\n  if (category === '') {\n    drinkUrlForFilterByCategory = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  }\n  return async (dispatch) => {\n    dispatch(requestRecipes());\n    dispatch(changeCurrentCategoryAction(category));\n    try {\n      const resquestFilteredByCategory = await fetch(drinkUrlForFilterByCategory);\n      const JSONresponseFiltered = await resquestFilteredByCategory.json();\n      dispatch(filteredByCategoryAction(JSONresponseFiltered.drinks));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nexport const randomDrinksApi = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getIngredientsDrink = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import {\n  listRecipes,\n  failedRequest,\n  requestRecipes,\n} from '../redux/actions';\nimport {\n  changeCurrentCategoryAction,\n  filteredByCategoryAction,\n}\n  from '../redux/actions/recipesActions';\n\nexport const getFoodRecipes = ({ searchInput = '', searchRadio = 's' }) => {\n  let endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?${searchRadio}=${searchInput}`;\n  if (searchRadio === 's' || searchRadio === 'f') {\n    endpoint = `https://www.themealdb.com/api/json/v1/1/search.php?${searchRadio}=${searchInput}`;\n  }\n  return async (dispatch) => {\n    dispatch(requestRecipes());\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      dispatch(listRecipes(data.meals));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nexport const getFood = async (recipeId) => {\n  const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`;\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getSuggestedFoods = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getAllFoodCategories = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const foodFilterByCategory = (category) => {\n  let foodUrlForFilterByCategory = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category.strCategory}`;\n  if (category === '') {\n    foodUrlForFilterByCategory = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  }\n  return async (dispatch) => {\n    dispatch(requestRecipes());\n    dispatch(changeCurrentCategoryAction(category));\n    try {\n      const resquestFilteredByCategory = await fetch(foodUrlForFilterByCategory);\n      const JSONresponseFiltered = await resquestFilteredByCategory.json();\n      dispatch(filteredByCategoryAction(JSONresponseFiltered.meals));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nexport const randomFoodsApi = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getIngredientsFood = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import {\n  failedRequest,\n  requestRecipes,\n  selectedArea,\n} from '../redux/actions';\n\nexport const getArea = (strArea) => {\n  const endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${strArea}`;\n  return async (dispatch) => {\n    dispatch(requestRecipes());\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      dispatch(selectedArea(data.meals));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nexport const getAllOrigin = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getFoodRecipes, getDrinkRecipes } from '../services';\nimport { requestRecipes, changeSearchBarAction } from '../redux/actions';\n\nclass CustomSearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchHeader: {\n        searchInput: '',\n        searchRadio: '',\n      },\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState((prevState) => ({\n      ...prevState,\n      searchHeader: {\n        ...prevState.searchHeader,\n        [name]: value,\n      },\n    }));\n  }\n\n  async handleButtonClick() {\n    const {\n      dispatchFoodRecipes,\n      dispatchDrinkRecipes,\n      title,\n      dispatchSearchBar,\n    } = this.props;\n    const { searchHeader } = this.state;\n    const { searchRadio, searchInput } = searchHeader;\n    if (searchRadio === 'f' && searchInput.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    if (title === 'Comidas') await dispatchFoodRecipes(searchHeader);\n    if (title === 'Bebidas') await dispatchDrinkRecipes(searchHeader);\n    await dispatchSearchBar();\n  }\n\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"search-input\">\n          Buscar Receitas:\n          <input\n            data-testid=\"search-input\"\n            id=\"search-input\"\n            name=\"searchInput\"\n            type=\"text\"\n            onChange={ this.handleInputChange }\n          />\n        </label>\n        <label htmlFor=\"ingredient-search-radio\">\n          Ingrediente:\n          <input\n            type=\"radio\"\n            id=\"ingredient-search-radio\"\n            name=\"searchRadio\"\n            value=\"i\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ this.handleInputChange }\n          />\n        </label>\n        <label htmlFor=\"name-search-radio\">\n          Nome:\n          <input\n            type=\"radio\"\n            id=\"name-search-radio\"\n            name=\"searchRadio\"\n            value=\"s\"\n            data-testid=\"name-search-radio\"\n            onChange={ this.handleInputChange }\n          />\n        </label>\n        <label htmlFor=\"first-letter-search-radio\">\n          Primeira letra:\n          <input\n            type=\"radio\"\n            id=\"first-letter-search-radio\"\n            name=\"searchRadio\"\n            value=\"f\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ this.handleInputChange }\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ this.handleButtonClick }\n        >\n          Buscar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFoodRecipes: (searchHeader) => dispatch(getFoodRecipes(searchHeader)),\n  dispatchDrinkRecipes: (searchHeader) => dispatch(getDrinkRecipes(searchHeader)),\n  dispatchUpdateFoodIsFetching: () => dispatch(requestRecipes()),\n  dispatchSearchBar: () => dispatch(changeSearchBarAction()),\n});\n\nCustomSearchBar.propTypes = {\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  dispatchDrinkRecipes: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  dispatchSearchBar: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(CustomSearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function CustomCardFood({ index, recipe, recipeType }) {\n  let recipeId = '';\n  if (recipe) {\n    recipeId = (recipeType === 'comidas') ? recipe.idMeal : recipe.idDrink;\n  }\n  return (\n    <div className=\"card single-card-main-page-content\" style={ { width: '8rem' } }>\n      {\n        !recipe\n          ? 'loading'\n          : (\n            <Link to={ `/${recipeType}/${recipeId}` }>\n              <img\n                data-testid={ `${index}-card-img` }\n                className=\"card-img-top img-card-main-page\"\n                src={ (recipeType === 'comidas')\n                  ? recipe.strMealThumb\n                  : recipe.strDrinkThumb }\n                alt=\"imagem de uma receita\"\n              />\n              <div className=\"card-body\">\n                <p\n                  data-testid={ `${index}-recipe-card` }\n                  className=\"card-text card-text-main-page\"\n                >\n                  { `receita ${index + 1}` }\n                </p>\n                <p\n                  data-testid={ `${index}-card-name` }\n                  className=\"card-title card-title-main-page\"\n                >\n                  { (recipeType === 'comidas') ? recipe.strMeal : recipe.strDrink }\n                </p>\n              </div>\n            </Link>\n          )\n      }\n    </div>\n  );\n}\n\nCustomCardFood.propTypes = {\n  index: PropTypes.number.isRequired,\n  recipeType: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    strMeal: PropTypes.string.isRequired,\n    strDrink: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n    strDrinkThumb: PropTypes.string.isRequired,\n    idMeal: PropTypes.number.isRequired,\n    idDrink: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nfunction CustomFooter() {\n  return (\n    <footer data-testid=\"footer\" className=\"footer\">\n      <Link\n        to=\"/bebidas\"\n        data-testid=\"drinks-bottom-btn\"\n        src={ drinkIcon }\n      >\n        <img\n          src={ drinkIcon }\n          alt=\"Drink Icon\"\n        />\n      </Link>\n      <Link to=\"/explorar\" data-testid=\"explore-bottom-btn\" src={ exploreIcon }>\n        <img\n          src={ exploreIcon }\n          alt=\"Explore Icon\"\n        />\n      </Link>\n      <Link\n        to=\"/comidas\"\n        data-testid=\"food-bottom-btn\"\n        src={ mealIcon }\n      >\n        <img\n          src={ mealIcon }\n          alt=\"Meal Icon\"\n        />\n      </Link>\n    </footer>\n  );\n}\n\nexport default CustomFooter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { foodFilterByCategory, getFoodRecipes } from '../services';\nimport { drinksFilteredByCategory, getDrinkRecipes } from '../services/drinkApi';\n\nclass CustomCartegory extends Component {\n  render() {\n    const {\n      category,\n      title,\n      dispatchFoodFilteredByCategory,\n      dispatchDrinkFilteredByCategory,\n      dispatchFoodRecipes,\n      dispatchDrinksRecipes,\n      currentCategory,\n    } = this.props;\n    return (\n      <button\n        type=\"button\"\n        data-testid={ `${category.strCategory}-category-filter` }\n        className=\"btn btn-outline-danger btn-category-main-page\"\n        onClick={ () => {\n          if (currentCategory === category.strCategory) {\n            return title === 'comidas' ? dispatchFoodRecipes({})\n              : dispatchDrinksRecipes({});\n          }\n          if (title === 'comidas') dispatchFoodFilteredByCategory(category);\n          if (title === 'bebidas') dispatchDrinkFilteredByCategory(category);\n        } }\n      >\n        {category.strCategory}\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentCategory: state.recipesReducer.currentCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchDrinksRecipes: (searchHeader) => dispatch(getDrinkRecipes(searchHeader)),\n  dispatchFoodRecipes: (searchHeader) => dispatch(getFoodRecipes(searchHeader)),\n  dispatchDrinkFilteredByCategory: (category) => {\n    dispatch(drinksFilteredByCategory(category));\n  },\n  dispatchFoodFilteredByCategory: (category) => {\n    dispatch(foodFilterByCategory(category));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomCartegory);\n\nCustomCartegory.propTypes = {\n  category: PropTypes.shape({\n    strCategory: PropTypes.string.isRequired,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  currentCategory: PropTypes.string.isRequired,\n  dispatchFoodFilteredByCategory: PropTypes.func.isRequired,\n  dispatchDrinkFilteredByCategory: PropTypes.func.isRequired,\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  dispatchDrinksRecipes: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Carousel from 'react-bootstrap/Carousel';\n\nexport default function CustomCardSuggested({ thumb, index, title }) {\n  return (\n    <div data-testid={ `${index}-recomendation-card` }>\n      <img\n        className=\"d-block w-100\"\n        src={ thumb }\n        alt={ index }\n      />\n      <Carousel.Caption>\n        <h3 data-testid={ `${index}-recomendation-title` }>{ title }</h3>\n      </Carousel.Caption>\n    </div>\n  );\n}\n\nCustomCardSuggested.propTypes = {\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { randomFoodsApi } from '../services';\n\nexport default class CustomExploreFoods extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { id: 0 };\n  }\n\n  async componentDidMount() {\n    const { meals } = await randomFoodsApi();\n    this.fetchFoodsRandom(meals[0].idMeal);\n  }\n\n  fetchFoodsRandom(value) {\n    this.setState({ id: value });\n  }\n\n  render() {\n    const { id } = this.state;\n\n    return (\n      <div className=\"explore-choose-type-content\">\n        <Link to=\"/explorar/comidas/ingredientes\" data-testid=\"explore-by-ingredient\">\n          <button\n            className=\"btn btn-danger btn-explore-choose-type\"\n            type=\"button\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/explorar/comidas/area\" data-testid=\"explore-by-area\">\n          <button\n            className=\"btn btn-danger btn-explore-choose-type\"\n            type=\"button\"\n          >\n            Por Local de Origem\n          </button>\n        </Link>\n        <Link to={ `/comidas/${id}` } data-testid=\"explore-surprise\">\n          <button\n            className=\"btn btn-danger btn-explore-choose-type\"\n            type=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { randomDrinksApi } from '../services';\n\nexport default class CustomExploreDrinks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { id: 0 };\n  }\n\n  async componentDidMount() {\n    const { drinks } = await randomDrinksApi();\n    this.fetchDrinksRandom(drinks[0].idDrink);\n  }\n\n  fetchDrinksRandom(value) {\n    this.setState({ id: value });\n  }\n\n  render() {\n    const { id } = this.state;\n    return (\n      <div className=\"explore-choose-type-content\">\n        <Link to=\"/explorar/bebidas/ingredientes\" data-testid=\"explore-by-ingredient\">\n          <button\n            className=\"btn btn-danger btn-explore-choose-type\"\n            type=\"button\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to={ `/bebidas/${id}` } data-testid=\"explore-surprise\">\n          <button\n            className=\"btn btn-danger btn-explore-choose-type\"\n            type=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass CustomCardFavoriteRecipe extends Component {\n  constructor() {\n    super();\n    this.renderDrinkCard = this.renderDrinkCard.bind(this);\n    this.renderFoodCard = this.renderFoodCard.bind(this);\n  }\n\n  renderDrinkCard() {\n    const { favorite: { name, image, alcoholicOrNot, id }, index, isShared } = this.props;\n    return (\n      <div>\n        <Link to={ `/bebidas/${id}` }>\n          <img\n            width=\"100vw\"\n            data-testid={ `${index}-horizontal-image` }\n            src={ image }\n            alt=\"imagem de uma receita\"\n          />\n          <p\n            data-testid={ `${index}-horizontal-name` }\n          >\n            {name}\n          </p>\n          <p\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            {alcoholicOrNot}\n          </p>\n        </Link>\n        {\n          (isShared) && <p>Link copiado!</p>\n        }\n      </div>\n    );\n  }\n\n  renderFoodCard() {\n    const { favorite: { name, area, category, image, id }, index, isShared } = this.props;\n    return (\n      <div>\n        <Link to={ `/comidas/${id}` }>\n          <img\n            width=\"100vw\"\n            data-testid={ `${index}-horizontal-image` }\n            src={ image }\n            alt=\"imagem de uma receita\"\n          />\n\n          <p\n            data-testid={ `${index}-horizontal-name` }\n          >\n            {name}\n          </p>\n        </Link>\n        <p\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          {area}\n          {' '}\n          -\n          {' '}\n          {category}\n        </p>\n        {\n          (isShared) && <p>Link copiado!</p>\n        }\n\n      </div>\n    );\n  }\n\n  render() {\n    const { favorite: { type } } = this.props;\n    return (\n      <div>\n        {type === 'bebida'\n          ? this.renderDrinkCard()\n          : this.renderFoodCard()}\n      </div>\n    );\n  }\n}\n\nexport default CustomCardFavoriteRecipe;\n\nCustomCardFavoriteRecipe.propTypes = {\n  isShared: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  favorite: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function CustomIngredientsFoods({ index, meal, dispatch }) {\n  const { strIngredient } = meal;\n  return (\n    <div className=\"card single-card-explore-ingredients\">\n      <Link to=\"/comidas\" onClick={ () => dispatch(strIngredient) }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ `https://www.themealdb.com/images/ingredients/${strIngredient}-Small.png` }\n          alt=\"Ingredientes\"\n          className=\"card-img-top img-card-explore-ingredients\"\n        />\n        <div className=\"card-body\">\n          <p\n            data-testid={ `${index}-ingredient-card` }\n            className=\"card-text ingredient-text-card\"\n          >\n            { `Ingredientes ${index}` }\n          </p>\n          <p\n            data-testid={ `${index}-card-name` }\n            className=\"card-title ingredient-title-card\"\n          >\n            { strIngredient }\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nCustomIngredientsFoods.propTypes = {\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  meal: PropTypes.shape({\n    strIngredient: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n    idIngredient: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function CustomIngredientsDrinks({ index, drink, dispatch }) {\n  const { strIngredient1 } = drink;\n  return (\n    <div className=\"card single-card-explore-ingredients\">\n      <Link to=\"/bebidas\" onClick={ () => dispatch(strIngredient1) }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ `https://www.thecocktaildb.com/images/ingredients/${strIngredient1}-Small.png` }\n          alt=\"Ingredientes\"\n          className=\"card-img-top img-card-explore-ingredients\"\n        />\n        <div className=\"card-body\">\n          <p\n            data-testid={ `${index}-ingredient-card` }\n            className=\"card-text ingredient-text-card\"\n          >\n            { `Ingrediente ${index + 1}` }\n          </p>\n          <p\n            data-testid={ `${index}-card-name` }\n            className=\"card-title ingredient-title-card\"\n          >\n            { strIngredient1 }\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nCustomIngredientsDrinks.propTypes = {\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  drink: PropTypes.shape({\n    strIngredient1: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setStorage, getStorage } from '../services';\n\nexport default class CustomDetailsButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isRedirect: false,\n      inProgress: false,\n    };\n  }\n\n  componentDidMount() {\n    this.verifyRecipeInProgress();\n  }\n\n  handleStartButtonClick() {\n    const { recipeType, recipeId } = this.props;\n    this.localStorageSetUp();\n    if (recipeType === 'comidas') {\n      setStorage('inProgressRecipes', {\n        ...getStorage('inProgressRecipes'),\n        meals: {\n          ...getStorage('inProgressRecipes').meals,\n          [recipeId]: [],\n        },\n      });\n    }\n    if (recipeType === 'bebidas') {\n      setStorage('inProgressRecipes', {\n        ...getStorage('inProgressRecipes'),\n        cocktails: {\n          ...getStorage('inProgressRecipes').cocktails,\n          [recipeId]: [],\n        },\n      });\n    }\n    this.setState({ isRedirect: true });\n  }\n\n  localStorageSetUp() {\n    if (!getStorage('inProgressRecipes')) {\n      setStorage('inProgressRecipes', { cocktails: {}, meals: {} });\n    }\n  }\n\n  verifyRecipeInProgress() {\n    const { recipeType, recipeId } = this.props;\n    const inProgressRecipes = getStorage('inProgressRecipes');\n    if (inProgressRecipes) {\n      if (recipeType === 'comidas' && (inProgressRecipes.meals[recipeId])) {\n        this.setState({ inProgress: true });\n      }\n      if (recipeType === 'bebidas' && inProgressRecipes.cocktails[recipeId]) {\n        this.setState({ inProgress: true });\n      }\n    }\n  }\n\n  render() {\n    const { recipeType, recipeId } = this.props;\n    const { isRedirect, inProgress } = this.state;\n    if (isRedirect) return <Redirect to={ `/${recipeType}/${recipeId}/in-progress` } />;\n    return (\n      <button\n        className=\"footer\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => this.handleStartButtonClick() }\n      >\n        { (inProgress) ? 'Continuar Receita' : 'Iniciar Receita' }\n      </button>\n    );\n  }\n}\n\nCustomDetailsButton.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n  recipeId: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CustomDetailsIngredients extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ingredientsList: [],\n      measureList: [],\n    };\n    this.getIngredientsList = this.getIngredientsList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getIngredientsList();\n  }\n\n  getIngredientsList() {\n    const { recipeType, recipe } = this.props;\n    const INITIAL_INDEX = 1;\n    const INDEX_FOOD = 20;\n    const INDEX_DRINK = 15;\n    const MAX_INDEX = (recipeType === 'comidas') ? INDEX_FOOD : INDEX_DRINK;\n    const ingredientsList = [];\n    const measureList = [];\n    for (let index = INITIAL_INDEX; index < MAX_INDEX; index += 1) {\n      ingredientsList\n        .push(recipe[`strIngredient${index}`]);\n      measureList\n        .push(recipe[`strMeasure${index}`]);\n    }\n    this.setState({\n      ingredientsList,\n      measureList,\n    });\n  }\n\n  render() {\n    const { ingredientsList, measureList } = this.state;\n    return (\n      ingredientsList\n        .filter((ingredient) => ingredient !== '' && ingredient !== null)\n        .map((ingredient, index) => (\n          <li\n            key={ index }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n            className=\"list-group-item\"\n          >\n            { `${(measureList[index]) ? (measureList[index]) : ''} ${ingredient}` }\n          </li>\n        ))\n    );\n  }\n}\n\nCustomDetailsIngredients.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default class CustomButtonShare extends Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.state = {\n      isShared: false,\n    };\n  }\n\n  handleButtonClick() {\n    const { url } = this.props;\n    copy(`http://localhost:3000${url}`);\n    this.setState({ isShared: true });\n  }\n\n  render() {\n    const { isShared } = this.state;\n    const { testDone = false, index } = this.props;\n    console.log(testDone);\n    return (\n      <div>\n        {isShared && <p>Link copiado!</p>}\n        <button\n          type=\"button\"\n          data-testid={ !testDone ? 'share-btn' : `${index}-horizontal-share-btn` }\n          onClick={ this.handleButtonClick }\n          src={ shareIcon }\n        >\n          <img src={ shareIcon } alt=\"\" />\n        </button>\n        { (isShared) && <p>Link copiado!</p> }\n      </div>\n    );\n  }\n}\n\nCustomButtonShare.propTypes = {\n  url: PropTypes.string.isRequired,\n  testDone: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { setStorage, getStorage } from '../services';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default class CustomButtonFavorite extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFavorite: false,\n    };\n    this.addFavoriteToLocalStorage = this.addFavoriteToLocalStorage.bind(this);\n    this.removeFavoriteFromLocalStorage = this.removeFavoriteFromLocalStorage.bind(this);\n    this.verifyRecipeIsFavorite = this.verifyRecipeIsFavorite.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.verifyRecipeIsFavorite();\n  }\n\n  handleButtonClick() {\n    const { isFavorite } = this.state;\n    if (isFavorite) {\n      this.removeFavoriteFromLocalStorage();\n    } else {\n      this.addFavoriteToLocalStorage();\n    }\n  }\n\n  verifyRecipeIsFavorite() {\n    const { recipe, recipeType } = this.props;\n    const recipeId = (recipeType === 'comidas') ? recipe.idMeal : recipe.idDrink;\n    const favoriteRecipes = getStorage('favoriteRecipes');\n    if (favoriteRecipes) {\n      this.setState({\n        isFavorite: favoriteRecipes.some(({ id }) => id === recipeId),\n      });\n    }\n  }\n\n  removeFavoriteFromLocalStorage() {\n    const { recipe, recipeType } = this.props;\n    const recipeId = (recipeType === 'comidas') ? recipe.idMeal : recipe.idDrink;\n    const favoriteRecipes = getStorage('favoriteRecipes');\n    setStorage('favoriteRecipes', favoriteRecipes.filter(({ id }) => id !== recipeId));\n    this.setState({ isFavorite: false });\n  }\n\n  addFavoriteToLocalStorage() {\n    const { recipe, recipeType } = this.props;\n    const newFavorite = {\n      id: (recipeType === 'comidas') ? recipe.idMeal : recipe.idDrink,\n      type: (recipeType === 'comidas') ? 'comida' : 'bebida',\n      area: (recipeType === 'comidas') ? recipe.strArea : '',\n      category: recipe.strCategory,\n      alcoholicOrNot: (recipeType === 'bebidas') ? recipe.strAlcoholic : '',\n      name: (recipeType === 'comidas') ? recipe.strMeal : recipe.strDrink,\n      image: (recipeType === 'comidas') ? recipe.strMealThumb : recipe.strDrinkThumb,\n    };\n    const favoriteRecipes = getStorage('favoriteRecipes');\n    if (!favoriteRecipes) {\n      setStorage('favoriteRecipes', [newFavorite]);\n    } else {\n      setStorage('favoriteRecipes', [...favoriteRecipes, newFavorite]);\n    }\n    this.setState({ isFavorite: true });\n  }\n\n  render() {\n    const { isFavorite } = this.state;\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        onClick={ this.handleButtonClick }\n        src={ (isFavorite) ? blackHeartIcon : whiteHeartIcon }\n        className=\"btn btn-light\"\n      >\n        <img\n          src={ (isFavorite) ? blackHeartIcon : whiteHeartIcon }\n          alt=\"\"\n        />\n      </button>\n    );\n  }\n}\n\nCustomButtonFavorite.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    idMeal: PropTypes.string.isRequired,\n    idDrink: PropTypes.string.isRequired,\n    strArea: PropTypes.string.isRequired,\n    strCategory: PropTypes.string.isRequired,\n    strAlcoholic: PropTypes.string.isRequired,\n    strMeal: PropTypes.string.isRequired,\n    strDrink: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n    strDrinkThumb: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { setStorage, getStorage } from '../services';\n\nexport default class CustomInProgressIngredients extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ingredientsList: [],\n    };\n    this.getIngredientsList = this.getIngredientsList.bind(this);\n    this.handleInputClick = this.handleInputClick.bind(this);\n    this.updateIngredientsOnState = this.updateIngredientsOnState.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.verifyIsRecipeIsDone = this.verifyIsRecipeIsDone.bind(this);\n  }\n\n  componentDidMount() {\n    this.localStorageSetUp();\n    this.getIngredientsList();\n  }\n\n  handleInputClick({ target: { checked, value } }) {\n    const { recipeType, recipeId } = this.props;\n    const recipes = getStorage('inProgressRecipes');\n    let recipeInProgress = (recipeType === 'comidas')\n      ? recipes.meals[recipeId]\n      : recipes.cocktails[recipeId];\n    if (checked) {\n      recipeInProgress.push(value);\n      this.updateLocalStorage(recipeInProgress);\n    } else {\n      recipeInProgress = recipeInProgress.filter((ingredient) => ingredient !== value);\n      this.updateLocalStorage(recipeInProgress);\n    }\n    this.updateIngredientsOnState(value);\n  }\n\n  getIngredientIsChecked(ingredientName) {\n    const { recipeType, recipeId } = this.props;\n    const recipes = getStorage('inProgressRecipes');\n    const recipeInProgress = (recipeType === 'comidas')\n      ? recipes.meals[recipeId]\n      : recipes.cocktails[recipeId];\n    return recipeInProgress.some((ingredient) => ingredient === ingredientName);\n  }\n\n  getIngredientsList() {\n    const { recipeType, recipe } = this.props;\n    const INITIAL_INDEX = 1;\n    const INDEX_FOOD = 20;\n    const INDEX_DRINK = 15;\n    const MAX_INDEX = (recipeType === 'comidas') ? INDEX_FOOD : INDEX_DRINK;\n    const ingredientsList = [];\n    for (let index = INITIAL_INDEX; index < MAX_INDEX; index += 1) {\n      const ingredient = recipe[`strIngredient${index}`];\n      if (ingredient !== '' && ingredient !== null) {\n        ingredientsList.push({\n          name: ingredient,\n          measure: recipe[`strMeasure${index}`],\n          isChecked: this.getIngredientIsChecked(ingredient),\n        });\n      }\n    }\n    this.setState({\n      ingredientsList,\n    });\n  }\n\n  localStorageSetUp() {\n    const { recipeType, recipeId } = this.props;\n    if (recipeType === 'comidas' && !getStorage('inProgressRecipes')) {\n      console.log(recipeType);\n      setStorage('inProgressRecipes', { cocktails: {}, meals: { [recipeId]: [] } });\n    }\n    if (recipeType === 'bebidas' && !getStorage('inProgressRecipes')) {\n      setStorage('inProgressRecipes', { cocktails: { [recipeId]: [] }, meals: {} });\n    }\n  }\n\n  updateIngredientsOnState(value) {\n    const { ingredientsList } = this.state;\n    const updatedIngredients = ingredientsList.map(({ name, measure, isChecked }) => {\n      if (name === value) {\n        return ({ name, measure, isChecked: !isChecked });\n      }\n      return ({ name, measure, isChecked });\n    });\n    this.setState({\n      ingredientsList: [\n        ...updatedIngredients,\n      ],\n    }, () => this.verifyIsRecipeIsDone());\n  }\n\n  verifyIsRecipeIsDone() {\n    const { recipeIsDone } = this.props;\n    const { ingredientsList } = this.state;\n    const isDone = ingredientsList.some((ingredient) => ingredient.isChecked !== true);\n    console.log(isDone);\n    recipeIsDone(!isDone);\n  }\n\n  updateLocalStorage(ingredients) {\n    const { recipeType, recipeId } = this.props;\n    if (recipeType === 'comidas') {\n      setStorage('inProgressRecipes', {\n        ...getStorage('inProgressRecipes'),\n        meals: {\n          ...getStorage('inProgressRecipes').meals,\n          [recipeId]: ingredients,\n        },\n      });\n    }\n    if (recipeType === 'bebidas') {\n      setStorage('inProgressRecipes', {\n        ...getStorage('inProgressRecipes'),\n        cocktails: {\n          ...getStorage('inProgressRecipes').cocktails,\n          [recipeId]: ingredients,\n        },\n      });\n    }\n  }\n\n  render() {\n    const { ingredientsList } = this.state;\n    return (\n      ingredientsList\n        .map(({ name, measure, isChecked }, index) => (\n          <li\n            key={ index }\n            data-testid={ `${index}-ingredient-step` }\n            className={ (isChecked) && 'ingredient' }\n          >\n            <input\n              type=\"checkbox\"\n              checked={ isChecked }\n              value={ name }\n              onClick={ (event) => this.handleInputClick(event) }\n            />\n            { `${(measure !== null) ? (measure) : ''} ${name}` }\n          </li>))\n    );\n  }\n}\n\nCustomInProgressIngredients.propTypes = {\n  recipeId: PropTypes.number.isRequired,\n  recipeIsDone: PropTypes.func.isRequired,\n  recipeType: PropTypes.string.isRequired,\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getArea } from '../services';\n\nclass CustomDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.areaFromOrigin = this.areaFromOrigin.bind(this);\n  }\n\n  async areaFromOrigin({ target: { value } }) {\n    const { dispatchArea, allFoods } = this.props;\n    if (value === 'all') return allFoods();\n    await dispatchArea(value);\n  }\n\n  render() {\n    const { data } = this.props;\n    return (\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        onChange={ (e) => this.areaFromOrigin(e) }\n        className=\"btn btn-danger\"\n      >\n        <option\n          data-testid=\"All-option\"\n          value=\"all\"\n          className=\"options-origins-dropdown\"\n        >\n          All\n        </option>\n        { data && data.map((item, index) => (\n          <option\n            key={ index }\n            data-testid={ `${item.strArea}-option` }\n            value={ item.strArea }\n          >\n            { item.strArea }\n          </option>\n        ))}\n      </select>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchArea: (e) => dispatch(getArea(e)),\n});\n\nexport default connect(null, mapDispatchToProps)(CustomDropdown);\nCustomDropdown.propTypes = {\n  data: PropTypes.func.isRequired,\n  dispatchArea: PropTypes.func.isRequired,\n  allFoods: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setStorage, getStorage } from '../services/localStorage';\nimport { CustomLogin } from '../components';\nimport { addEmailAction, addPasswordAction } from '../redux/actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      email: '',\n      buttonDisable: true,\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validaInput = this.validaInput.bind(this);\n    this.setUpLocalStorage = this.setUpLocalStorage.bind(this);\n  }\n\n  handleSubmit() {\n    setStorage('mealsToken', 1);\n    setStorage('cocktailsToken', 1);\n    const { email, password } = this.state;\n    const { history, dispatchEmail, dispatchPassword } = this.props;\n    dispatchEmail(email);\n    dispatchPassword(password);\n    setStorage('user', { email });\n    this.setUpLocalStorage();\n    history.push('/comidas');\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, this.validaInput);\n  }\n\n  setUpLocalStorage() {\n    if (!getStorage('doneRecipes')) {\n      setStorage('doneRecipes', []);\n    }\n    if (!getStorage('favoriteRecipes')) {\n      setStorage('favoriteRecipes', []);\n    }\n    if (!getStorage('inProgressRecipes')) {\n      setStorage('inProgressRecipes', { cocktails: {}, meals: {} });\n    }\n  }\n\n  validaInput() {\n    const { email, password } = this.state;\n    const number = 6;\n    if (email.match(/\\S+@\\S+\\.\\S+/) && password.length > number) {\n      this.setState({ buttonDisable: false });\n    } else {\n      this.setState({ buttonDisable: true });\n    }\n  }\n\n  render() {\n    const { buttonDisable } = this.state;\n    return (\n      <div className=\"margin-page\">\n        <CustomLogin\n          onInputChange={ this.handleInputChange }\n          onHandleSubmit={ this.handleSubmit }\n          validate={ buttonDisable }\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchEmail: (e) => dispatch(addEmailAction(e)),\n  dispatchPassword: (e) => dispatch(addPasswordAction(e)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  dispatchPassword: PropTypes.func.isRequired,\n  dispatchEmail: PropTypes.func.isRequired,\n  history: PropTypes.func.isRequired,\n};\n","export const ADD_EMAIL = 'ADD_EMAIL';\nexport const ADD_PASSWORD = 'ADD_PASSWORD';\nexport const addEmailAction = (email) => ({ type: ADD_EMAIL, email });\nexport const addPasswordAction = (password) => ({ type: ADD_PASSWORD, password });\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport search from '../images/searchIcon.svg';\nimport profile from '../images/profileIcon.svg';\nimport { CustomSearchBar } from '.';\n\nexport default function CustomHeader({\n  route = '/perfil',\n  title,\n  showSearchTopBtn = true,\n}) {\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n  const routeChange = () => {\n    history.push(route);\n  };\n  const showSearchBar = () => {\n    setShow(!show);\n  };\n  return (\n    <header className=\"header-content\">\n      <button\n        type=\"button\"\n        onClick={ routeChange }\n        data-testid=\"profile-top-btn\"\n        src={ profile }\n        className=\"btn btn-light\"\n      >\n        <img src={ profile } alt=\"profile\" />\n      </button>\n      <h1\n        data-testid=\"page-title\"\n        className=\"main-page-name\"\n      >\n        {title}\n      </h1>\n      {showSearchTopBtn\n      && title !== 'Explorar'\n      && title !== 'Receitas Favoritas'\n      && title !== 'Receitas Feitas'\n        ? (\n          <div>\n            <div>\n              <button\n                type=\"button\"\n                data-testid=\"search-top-btn\"\n                onClick={ () => showSearchBar() }\n                src={ search }\n                className=\"btn btn-light\"\n              >\n                <img src={ search } alt=\"buscar\" />\n              </button>\n            </div>\n            <div>\n              {show && <CustomSearchBar title={ title } />}\n            </div>\n          </div>\n        )\n        : null}\n    </header>\n  );\n}\nCustomHeader.propTypes = {\n  route: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  showSearchTopBtn: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { CustomCardFood, CustomFooter, CustomCartegory } from '../components';\nimport CustomHeader from '../components/CustomHeader';\nimport { listRecipes, requestRecipes } from '../redux/actions';\nimport {\n  getAllFoodCategories,\n  getFoodRecipes,\n  getDrinkRecipes,\n  getAllDrinksCategories,\n} from '../services';\n\nclass Recipes extends Component {\n  constructor() {\n    super();\n    this.handleRecipes = this.handleRecipes.bind(this);\n    this.renderAlertError = this.renderAlertError.bind(this);\n    this.renderRecipes = this.renderRecipes.bind(this);\n    this.handleCategories = this.handleCategories.bind(this);\n    this.getTypeOfRecipe = this.getTypeOfRecipe.bind(this);\n    this.state = {\n      recipesCategories: [],\n      recipeType: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getTypeOfRecipe();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { type } = this.props;\n    if (!prevProps.type) return;\n    if (prevProps.type !== type) this.getTypeOfRecipe();\n  }\n\n  async handleCategories() {\n    const { recipeType } = this.state;\n    let recipesCategories = '';\n    if (recipeType === 'comidas') {\n      const { meals } = await getAllFoodCategories();\n      recipesCategories = meals;\n    } else {\n      const { drinks } = await getAllDrinksCategories();\n      recipesCategories = drinks;\n    }\n    this.setState({\n      recipesCategories,\n    });\n  }\n\n  handleRecipes() {\n    const { recipes, isFetching, isSearchBar } = this.props;\n    if (recipes) {\n      if (!recipes.length && !isFetching) return this.renderAlertError();\n      if (recipes.length === 1 && isSearchBar) {\n        return this.redirectToRecipeDetail(recipes);\n      }\n      return this.renderRecipes();\n    }\n  }\n\n  getTypeOfRecipe() {\n    const { type } = this.props;\n    this.setState({\n      recipeType: type,\n    }, () => this.fetchAllRecipes());\n  }\n\n  fetchAllRecipes() {\n    const { dispatchFoodRecipes, currentCategoryFood } = this.props;\n    const { recipeType } = this.state;\n    if (currentCategoryFood === 'all') {\n      if (recipeType === 'comidas') {\n        dispatchFoodRecipes(getFoodRecipes({}));\n      } else {\n        dispatchFoodRecipes(getDrinkRecipes({}));\n      }\n    } else {\n      const ingredientsObj = {\n        searchInput: currentCategoryFood,\n        searchRadio: 'i',\n      };\n      if (recipeType === 'comidas') {\n        dispatchFoodRecipes(getFoodRecipes(ingredientsObj));\n      } else {\n        dispatchFoodRecipes(getDrinkRecipes(ingredientsObj));\n      }\n    }\n    this.handleCategories();\n  }\n\n  redirectToRecipeDetail(recipes) {\n    const { recipeType } = this.state;\n    const recipeSufixe = recipeType === 'comidas' ? 'Meal' : 'Drink';\n    return (\n      <Redirect to={ `/${recipeType}/${recipes[0][`id${recipeSufixe}`]}` } />\n    );\n  }\n\n  renderAlertError() {\n    const { dispatchUpdateFoodIsFetching } = this.props;\n    dispatchUpdateFoodIsFetching();\n    return alert(\n      'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n    );\n  }\n\n  renderRecipes() {\n    const { recipes } = this.props;\n    const { recipeType } = this.state;\n    const LENGTH = 12;\n    const INITIAL_LENGTH = 0;\n    const MAX_LENGTH = recipes.length > LENGTH ? LENGTH : recipes.length;\n    return (\n      <div className=\"cards-main-page-content\">\n        { recipes.slice(INITIAL_LENGTH, MAX_LENGTH)\n          .map((recipe, index) => (\n            <CustomCardFood\n              key={ (recipeType === 'comidas') ? recipe.idMeal : recipe.idDrink }\n              index={ index }\n              recipe={ recipe }\n              recipeType={ recipeType }\n            />))}\n      </div>\n    );\n  }\n\n  renderCategories() {\n    const { dispatchFoodRecipes } = this.props;\n    const { recipesCategories, recipeType } = this.state;\n    const MAX_LENGTH = 5;\n    const INITIAL_LENGTH = 0;\n    if (recipesCategories !== undefined) {\n      return (\n        <div className=\"category-choose-content\">\n          <button\n            data-testid=\"All-category-filter\"\n            type=\"button\"\n            className=\"btn btn-outline-danger btn-category-main-page\"\n            onClick={ () => (\n              (recipeType === 'comidas')\n                ? dispatchFoodRecipes(getFoodRecipes({}))\n                : dispatchFoodRecipes(getDrinkRecipes({}))\n            ) }\n          >\n            All\n          </button>\n          {recipesCategories\n            .slice(INITIAL_LENGTH, MAX_LENGTH)\n            .map((category, index) => (\n              <CustomCartegory\n                key={ index }\n                index={ index }\n                category={ category }\n                title={ recipeType }\n              />\n            ))}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { recipeType } = this.state;\n    return (\n      <div className=\"recipes-main-content\">\n        <CustomHeader title={ (recipeType === 'comidas') ? 'Comidas' : 'Bebidas' } />\n        { this.renderCategories()}\n        { this.handleRecipes()}\n        <CustomFooter />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isFetching: state.recipesReducer.isFetching,\n  recipes: state.recipesReducer.recipes,\n  currentCategoryFood: state.recipesReducer.currentCategory,\n  isSearchBar: state.recipesReducer.isSearchBar,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFoodRecipes: (getRecipe) => dispatch(getRecipe),\n  dispatchInitialCards: (JSONRequestAllCAtegories) => {\n    dispatch(listRecipes(JSONRequestAllCAtegories));\n  },\n  dispatchUpdateFoodIsFetching: () => dispatch(requestRecipes()),\n});\n\nRecipes.propTypes = {\n  type: PropTypes.string.isRequired,\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  currentCategoryFood: PropTypes.string.isRequired,\n  dispatchUpdateFoodIsFetching: PropTypes.func.isRequired,\n  isSearchBar: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  recipes: PropTypes.shape({\n    length: PropTypes.number.isRequired,\n    slice: PropTypes.func.isRequired,\n  }).isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CustomFooter, CustomIngredientsDrinks } from '../components';\nimport CustomHeader from '../components/CustomHeader';\nimport { getIngredientsDrink } from '../services';\nimport { requestIngredients } from '../redux/actions/recipesActions';\n\nclass DrinksIngredients extends Component {\n  constructor() {\n    super();\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.state = {\n      drinks: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.handleIngredients();\n  }\n\n  async handleIngredients() {\n    const { drinks } = await getIngredientsDrink();\n    if (drinks) {\n      this.setState({\n        drinks,\n        isLoading: false,\n      });\n    }\n  }\n\n  renderIngredients() {\n    const { drinks } = this.state;\n    const { dispatchIngredients } = this.props;\n    const LENGTH = 12;\n    const INITIAL_LENGTH = 0;\n    const MAX_LENGTH = drinks.length > LENGTH ? LENGTH : drinks.length;\n    return (\n      <div className=\"explore-ingredients-content\">\n        { drinks.slice(INITIAL_LENGTH, MAX_LENGTH).map((drink, index) => (\n          <CustomIngredientsDrinks\n            key={ drink.idIngredient }\n            index={ index }\n            drink={ drink }\n            dispatch={ dispatchIngredients }\n          />\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    if (isLoading) return <p>Carregando</p>;\n    return (\n      <div>\n        <CustomHeader\n          title=\"\n          Explorar Ingredientes\"\n          showSearchTopBtn={ false }\n        />\n        {this.renderIngredients()}\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchIngredients: (Ingredients) => dispatch(requestIngredients(Ingredients)),\n});\n\nDrinksIngredients.propTypes = {\n  dispatchIngredients: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(DrinksIngredients);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CustomFooter, CustomIngredientsFoods } from '../components';\nimport CustomHeader from '../components/CustomHeader';\nimport { getIngredientsFood } from '../services';\nimport { requestIngredients } from '../redux/actions/recipesActions';\n\nclass FoodsIngredients extends Component {\n  constructor() {\n    super();\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n    this.state = {\n      meals: '',\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.handleIngredients();\n  }\n\n  async handleIngredients() {\n    const { meals } = await getIngredientsFood();\n    if (meals) {\n      this.setState({\n        meals,\n        isLoading: false,\n      });\n    }\n  }\n\n  renderIngredients() {\n    const { meals } = this.state;\n    const { dispatchIngredients } = this.props;\n    const LENGTH = 12;\n    const INITIAL_LENGTH = 0;\n    const MAX_LENGTH = meals.length > LENGTH ? LENGTH : meals.length;\n    return (\n      <div className=\"explore-ingredients-content\">\n        { meals.slice(INITIAL_LENGTH, MAX_LENGTH).map((meal, index) => (\n          <CustomIngredientsFoods\n            key={ meal.idIngredient }\n            index={ index }\n            meal={ meal }\n            dispatch={ dispatchIngredients }\n          />\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div>\n        <CustomHeader\n          title=\"\n          Explorar Ingredientes\"\n          showSearchTopBtn={ false }\n        />\n        { isLoading ? <p>Carregando</p>\n          : this.renderIngredients()}\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchIngredients: (Ingredients) => dispatch(requestIngredients(Ingredients)),\n});\n\nFoodsIngredients.propTypes = {\n  dispatchIngredients: PropTypes.func.isRequired,\n  meals: PropTypes.shape({\n    // length: PropTypes.number.isRequired,\n    slice: PropTypes.func.isRequired,\n  }).isRequired,\n};\nexport default connect(null, mapDispatchToProps)(FoodsIngredients);\n","import React, { Component } from 'react';\nimport { CustomExploreDrinks, CustomFooter } from '../components';\nimport CustomHeader from '../components/CustomHeader';\n\nexport default class ExploreDrinks extends Component {\n  render() {\n    return (\n      <div className=\"explore-content\">\n        <CustomHeader\n          title=\"Explorar Bebidas\"\n          showSearchTopBtn={ false }\n        />\n        <CustomExploreDrinks />\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { CustomFooter, CustomExploreFoods } from '../components';\nimport CustomHeader from '../components/CustomHeader';\n\nexport default class ExploreFoods extends Component {\n  render() {\n    return (\n      <div className=\"explore-content\">\n        <CustomHeader title=\"Explorar Comidas\" showSearchTopBtn={ false } />\n        <CustomExploreFoods />\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function CustomExplore() {\n  return (\n    <div className=\"explore-choose-type-content\">\n      <button\n        type=\"button\"\n        data-testid=\"explore-food\"\n        className=\"btn btn-danger btn-explore-choose-type\"\n      >\n        <Link to=\"/explorar/comidas\" className=\"link\">Explorar Comidas</Link>\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-drinks\"\n        className=\"btn btn-danger btn-explore-choose-type\"\n      >\n        <Link to=\"/explorar/bebidas\" className=\"link\">Explorar Bebidas</Link>\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { CustomFooter } from '../components';\nimport CustomExplore from '../components/CustomExplore';\nimport CustomHeader from '../components/CustomHeader';\n\nexport default class Explore extends Component {\n  render() {\n    return (\n      <div className=\"explore-content\">\n        <CustomHeader title=\"Explorar\" />\n        <CustomExplore />\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { CustomFooter, CustomDropdown, CustomCardFood } from '../components';\nimport CustomHeader from '../components/CustomHeader';\nimport { requestRecipes } from '../redux/actions';\nimport { getFoodRecipes, getAllOrigin } from '../services';\n\nclass ExploreArea extends Component {\n  constructor() {\n    super();\n    this.getOrigin = this.getOrigin.bind(this);\n    this.renderAlertError = this.renderAlertError.bind(this);\n    this.renderRecipes = this.renderRecipes.bind(this);\n    this.allFoods = this.allFoods.bind(this);\n\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getOrigin();\n    this.allFoods();\n  }\n\n  handleRecipes() {\n    const { meals, isFetching } = this.props;\n    const numberToComper = 1;\n    if (meals.length === numberToComper) {\n      return <Redirect to={ `/comidas/${meals[0].idMeal}` } />;\n    }\n    if (isFetching) return <p>Loading</p>;\n    if (!meals.length && !isFetching) return this.renderAlertError();\n    if (meals.length === 1) return this.redirectToRecipeDetail();\n    return this.renderRecipes();\n  }\n\n  async getOrigin() {\n    const { meals } = await getAllOrigin();\n    this.setState({ data: meals });\n  }\n\n  allFoods() {\n    const { dispatchFoodRecipes } = this.props;\n    dispatchFoodRecipes({});\n  }\n\n  renderRecipes() {\n    const { meals, type } = this.props;\n    const LENGTH = 12;\n    const INITIAL_LENGTH = 0;\n    const MAX_LENGTH = meals.length > LENGTH ? LENGTH : meals.length;\n    return (\n      <div className=\"explore-by-origin-cards\">\n        {meals && meals\n          .slice(INITIAL_LENGTH, MAX_LENGTH)\n          .map((meal, index) => (\n            <CustomCardFood\n              key={ meal.idMeal }\n              index={ index }\n              recipe={ meal }\n              recipeType={ type }\n            />\n          ))}\n      </div>\n    );\n  }\n\n  renderAlertError() {\n    const { dispatchUpdateFoodIsFetching } = this.props;\n    dispatchUpdateFoodIsFetching();\n    return alert(\n      'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n    );\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"origins-main-content\">\n        <CustomHeader title=\"Explorar Origem\" />\n        <CustomDropdown\n          data={ data }\n          allFoods={ this.allFoods }\n        />\n        {this.handleRecipes()}\n\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  meals: state.recipesReducer.recipes,\n  isFetching: state.recipesReducer.isFetching,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFoodRecipes: (searchHeader) => dispatch(getFoodRecipes(searchHeader)),\n  dispatchUpdateFoodIsFetching: () => dispatch(requestRecipes()),\n});\n\nExploreArea.propTypes = {\n  dispatchUpdateFoodIsFetching: PropTypes.func.isRequired,\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  meals: PropTypes.shape({\n    length: PropTypes.number.isRequired,\n    slice: PropTypes.func.isRequired,\n  }).isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreArea);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomFooter } from '../components';\nimport CustomHeader from '../components/CustomHeader';\nimport { getStorage } from '../services/localStorage';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.getEmailStorage = this.getEmailStorage.bind(this);\n    this.go = this.go.bind(this);\n  }\n\n  getEmailStorage() {\n    if (!getStorage('user')) return 'usuário não logado';\n    const { email } = getStorage('user');\n    return email;\n  }\n\n  go({ target: { name } }) {\n    const { history } = this.props;\n    if (name === 'profile') history.push('/receitas-feitas');\n    if (name === 'receitas-favoritas') history.push('/receitas-favoritas');\n    if (name === 'sair') {\n      localStorage.clear();\n      history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <CustomHeader title=\"Perfil\" showSearchTopBtn={ false } />\n        <p data-testid=\"profile-email\">{ this.getEmailStorage() }</p>\n        <button\n          type=\"button\"\n          data-testid=\"profile-done-btn\"\n          onClick={ (e) => this.go(e) }\n          name=\"profile\"\n        >\n          Receitas Feitas\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"profile-favorite-btn\"\n          onClick={ (e) => this.go(e) }\n          name=\"receitas-favoritas\"\n        >\n          Receitas Favoritas\n        </button>\n\n        <button\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ (e) => this.go(e) }\n          name=\"sair\"\n        >\n          Sair\n        </button>\n        <CustomFooter />\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  history: PropTypes.func.isRequired,\n};\nexport default Profile;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-bootstrap';\nimport {\n  CustomCardSuggested,\n  CustomDetailsButton,\n  CustomDetailsIngredients,\n  CustomButtonShare,\n  CustomButtonFavorite,\n} from '../components';\nimport {\n  getFood,\n  getDrink,\n  getSuggestedFoods,\n  getSuggestedDrinks,\n  getStorage,\n} from '../services';\n\nexport default class RecipeDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n    this.getTypeOfRecipe = this.getTypeOfRecipe.bind(this);\n    this.getYoutubeEmbedUrl = this.getYoutubeEmbedUrl.bind(this);\n    this.getSuggestedRecipes = this.getSuggestedRecipes.bind(this);\n    this.verifyRecipeIsDone = this.verifyRecipeIsDone.bind(this);\n    this.state = {\n      recipeId: '',\n      isLoading: true,\n      recipe: {},\n      suggestedRecipes: [],\n      recipeType: '',\n      isDone: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id }, path } } = this.props;\n    this.fetchRecipe(id, path);\n  }\n\n  getSuggestedRecipes() {\n    const { suggestedRecipes, recipeType } = this.state;\n    if (!suggestedRecipes) return <div> Sem Sugestões </div>;\n    const sufixeRecipe = (recipeType === 'comidas') ? 'Drink' : 'Meal';\n    const INITIAL_INDEX = 0;\n    const MAX_INDEX = 6;\n    return (\n      <Carousel>\n        {\n          suggestedRecipes.slice(INITIAL_INDEX, MAX_INDEX)\n            .map((recipe, index) => (\n              <Carousel.Item key={ index }>\n                <CustomCardSuggested\n                  index={ index }\n                  thumb={ recipe[`str${sufixeRecipe}Thumb`] }\n                  title={ recipe[`str${sufixeRecipe}`] }\n                />\n              </Carousel.Item>))\n        }\n      </Carousel>\n    );\n  }\n\n  getYoutubeEmbedUrl() {\n    const { recipe: { strYoutube } } = this.state;\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = strYoutube.match(regExp);\n    if (!match) return '';\n    return `https://www.youtube.com/embed/${match[2]}`;\n  }\n\n  getTypeOfRecipe(path) {\n    const regExp = /(\\w+)/;\n    const match = path.match(regExp);\n    return match[0];\n  }\n\n  verifyRecipeIsDone(recipeId) {\n    const doneRecipes = getStorage('doneRecipes');\n    if (doneRecipes) {\n      this.setState({\n        isDone: doneRecipes.some(({ id }) => id === recipeId),\n      });\n    }\n  }\n\n  async fetchRecipe(id, path) {\n    const recipeType = this.getTypeOfRecipe(path);\n    this.setState({ isLoading: true });\n    if (recipeType === 'comidas') {\n      const { meals } = await getFood(id);\n      const { drinks } = await getSuggestedDrinks();\n      this.setState({\n        recipeId: id,\n        isLoading: false,\n        recipe: meals[0],\n        suggestedRecipes: drinks,\n        recipeType,\n      });\n    }\n    if (recipeType === 'bebidas') {\n      const { drinks } = await getDrink(id);\n      const { meals } = await getSuggestedFoods();\n      this.setState({\n        recipeId: id,\n        isLoading: false,\n        recipe: drinks[0],\n        suggestedRecipes: meals,\n        recipeType,\n      });\n    }\n    this.verifyRecipeIsDone(id);\n  }\n\n  render() {\n    const {\n      isLoading,\n      recipe,\n      recipeType,\n      recipeId,\n      isDone,\n    } = this.state;\n\n    const { strInstructions } = recipe;\n\n    const { match: { url } } = this.props;\n\n    if (isLoading) return <div> Loading... </div>;\n    return (\n      <div\n        className=\"card recipe-details-content\"\n        data-testid=\"0-recipe-card\"\n      >\n        <img\n          data-testid=\"recipe-photo\"\n          src={ (recipeType === 'comidas') ? recipe.strMealThumb : recipe.strDrinkThumb }\n          alt=\"recipe-exemple\"\n          className=\"card-img-top\"\n        />\n        <div\n          className=\"card-body\"\n        >\n          <div className=\"share-like-btn\">\n            <CustomButtonShare url={ url } />\n            <CustomButtonFavorite\n              recipeType={ recipeType }\n              recipe={ recipe }\n            />\n          </div>\n          <h2\n            data-testid=\"recipe-title\"\n            className=\"card-title\"\n          >\n            { (recipeType === 'comidas') ? recipe.strMeal : recipe.strDrink }\n          </h2>\n          <h3 data-testid=\"recipe-category\">\n            { (recipeType === 'comidas') ? recipe.strCategory : recipe.strAlcoholic }\n          </h3>\n          <p\n            data-testid=\"instructions\"\n            className=\"card-text\"\n          >\n            { strInstructions }\n          </p>\n          <ul className=\"list-group list-group-flush\">\n            { (!isLoading)\n           && (\n             <CustomDetailsIngredients recipeType={ recipeType } recipe={ recipe } />) }\n          </ul>\n          { (recipeType === 'comidas') && <iframe\n            data-testid=\"video\"\n            src={ this.getYoutubeEmbedUrl() }\n            frame-border=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allow-fullscreen\n            title=\"video\"\n          /> }\n          { (!isLoading) && this.getSuggestedRecipes() }\n          { (!isDone)\n          && (\n            <CustomDetailsButton\n              recipeId={ recipeId }\n              recipeType={ recipeType }\n              recipe={ recipe }\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport copy from 'clipboard-copy';\nimport { CustomCardFavoriteRecipe } from '../components';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { setStorage } from '../services';\nimport CustomHeader from '../components/CustomHeader';\n\nclass FavoriteRecipes extends Component {\n  constructor() {\n    super();\n    this.setStateWithFavoritesLocalStorage = this\n      .setStateWithFavoritesLocalStorage.bind(this);\n    this.removeFavoriteFromLocalStoage = this.removeFavoriteFromLocalStoage.bind(this);\n    this.renderCardsAndBtns = this.renderCardsAndBtns.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.filterFavorites = this.filterFavorites.bind(this);\n    this.state = {\n      favoriteFilter: [],\n      favorites: [],\n      isShared: false,\n    };\n  }\n\n  componentDidMount() {\n    const favoritesLocalStorage = localStorage.getItem('favoriteRecipes');\n    if (favoritesLocalStorage) {\n      this.setStateWithFavoritesLocalStorage(JSON.parse(favoritesLocalStorage));\n    }\n  }\n\n  handleButtonClick({ type, id }) {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    this.setState({ isShared: true });\n  }\n\n  setStateWithFavoritesLocalStorage(favoritesLocalStorage) {\n    this.setState({\n      favoriteFilter: favoritesLocalStorage,\n      favorites: favoritesLocalStorage,\n    });\n  }\n\n  filterFavorites({ target: { value } }) {\n    const { favorites } = this.state;\n    if (value === 'food') {\n      this.setState({\n        favoriteFilter: favorites.filter((favorite) => favorite.type === 'comida'),\n      });\n    } else if (value === 'drinks') {\n      this.setState({\n        favoriteFilter: favorites.filter((favorite) => favorite.type === 'bebida'),\n      });\n    } else {\n      this.setState({\n        favoriteFilter: favorites,\n      });\n    }\n  }\n\n  removeFavoriteFromLocalStoage(idToRemove) {\n    const { favorites } = this.state;\n    setStorage('favoriteRecipes', favorites.filter(({ id }) => id !== idToRemove));\n    const favoritesLocalStorage = localStorage.getItem('favoriteRecipes');\n    this.setStateWithFavoritesLocalStorage(JSON.parse(favoritesLocalStorage));\n  }\n\n  renderCardsAndBtns() {\n    const { favoriteFilter, isShared } = this.state;\n\n    return (\n      <div>\n        {favoriteFilter\n          .map((favorite, index) => (\n            <div key={ favorite.id }>\n              <CustomCardFavoriteRecipe\n                key={ favorite.id }\n                favorite={ favorite }\n                index={ index }\n                isShared={ isShared }\n              />\n              <button\n                data-testid={ `${index}-horizontal-share-btn` }\n                type=\"button\"\n                src={ shareIcon }\n                onClick={ () => this.handleButtonClick(favorite) }\n              >\n                <img src={ shareIcon } alt=\"link para compartilhar\" />\n              </button>\n              <button\n                type=\"button\"\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ blackHeartIcon }\n                onClick={ () => this.removeFavoriteFromLocalStoage(favorite.id) }\n              >\n                <img\n                  src={ blackHeartIcon }\n                  alt=\"icone de favoritado\"\n                />\n              </button>\n            </div>\n          ))}\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          value=\"food\"\n          onClick={ (e) => this.filterFavorites(e) }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          value=\"drinks\"\n          onClick={ (e) => this.filterFavorites(e) }\n        >\n          Drinks\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          value=\"all\"\n          onClick={ (e) => this.filterFavorites(e) }\n        >\n          All\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const { favorites } = this.state;\n    const numerToComper = 0;\n    return (\n      <div>\n        <CustomHeader title=\"Receitas Favoritas\" />\n        {\n          favorites.length === numerToComper\n            ? <p>não há receitas favoritas ainda</p>\n            : this.renderCardsAndBtns()\n        }\n      </div>\n    );\n  }\n}\n\nexport default FavoriteRecipes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport {\n  CustomInProgressIngredients,\n  CustomButtonShare,\n  CustomButtonFavorite,\n} from '../components';\nimport { getFood, getDrink, getStorage, setStorage } from '../services';\n\nclass RecipeInProgress extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n    this.getTypeOfRecipe = this.getTypeOfRecipe.bind(this);\n    this.verifyRecipeIsDone = this.verifyRecipeIsDone.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.state = {\n      recipeId: '',\n      isLoading: true,\n      recipe: [],\n      recipeType: '',\n      isDone: true,\n      isRedirect: false,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: { id },\n        path,\n      },\n    } = this.props;\n    this.fetchRecipe(id, path);\n  }\n\n  handleButtonClick() {\n    const { recipe, recipeType } = this.state;\n    const dNow = new Date();\n    const localdate = `${dNow.getDate()}/${dNow.getMonth() + 1}/${dNow.getFullYear()}`;\n\n    if (getStorage('doneRecipes')) {\n      setStorage('doneRecipes', [\n        ...getStorage('doneRecipes'),\n        {\n          id: (recipeType === 'comidas' ? recipe.idMeal : recipe.idDrink),\n          type: (recipeType === 'comidas' ? 'comida' : 'bebida'),\n          area: recipe.strArea ? recipe.strArea : '',\n          category: recipe.strCategory,\n          alcoholicOrNot: recipe.strAlcoholic ? recipe.strAlcoholic : '',\n          name: recipeType === 'comidas' ? recipe.strMeal : recipe.strDrink,\n          image: recipeType === 'comidas' ? recipe.strMealThumb : recipe.strDrinkThumb,\n          doneDate: localdate,\n          tags: recipe.strTags ? recipe.strTags.split(',') : [],\n        },\n      ]);\n    }\n    this.setState({\n      isRedirect: true,\n    });\n  }\n\n  getTypeOfRecipe(path) {\n    const regExp = /(\\w+)/;\n    const match = path.match(regExp);\n    return match[0];\n  }\n\n  verifyRecipeIsDone(done) {\n    /* const doneRecipes = getStorage('doneRecipes');\n    if (doneRecipes) {\n      this.setState({\n        isDone: doneRecipes.some(({ id }) => id === recipeId),\n      });\n    } */\n    this.setState({\n      isDone: !done,\n    });\n  }\n\n  async fetchRecipe(id, path) {\n    const recipeType = this.getTypeOfRecipe(path);\n    this.setState({ isLoading: true });\n    if (recipeType === 'comidas') {\n      const { meals } = await getFood(id);\n      this.setState({\n        recipeId: id,\n        isLoading: false,\n        recipe: meals[0],\n        recipeType,\n      });\n    }\n    if (recipeType === 'bebidas') {\n      const { drinks } = await getDrink(id);\n      this.setState({\n        recipeId: id,\n        isLoading: false,\n        recipe: drinks[0],\n        recipeType,\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      recipe,\n      recipeType,\n      recipeId,\n      isDone,\n      isRedirect,\n    } = this.state;\n\n    const { strInstructions } = recipe;\n\n    const {\n      match: { url },\n    } = this.props;\n\n    if (isLoading) return <div> Loading... </div>;\n    if (isRedirect) return <Redirect to=\"/receitas-feitas\" />;\n    return (\n      <div>\n        <img\n          data-testid=\"recipe-photo\"\n          src={\n            recipeType === 'comidas'\n              ? recipe.strMealThumb\n              : recipe.strDrinkThumb\n          }\n          alt=\"recipe-exemple\"\n        />\n        <h2 data-testid=\"recipe-title\">\n          {recipeType === 'comidas' ? recipe.strMeal : recipe.strDrink}\n        </h2>\n        <CustomButtonShare url={ url.replace('/in-progress', '') } />\n        <CustomButtonFavorite recipeType={ recipeType } recipe={ recipe } />\n        <h3 data-testid=\"recipe-category\">\n          {recipeType === 'comidas' ? recipe.strCategory : recipe.strAlcoholic}\n        </h3>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n        <ul>\n          {!isLoading && (\n            <CustomInProgressIngredients\n              recipeType={ recipeType }\n              recipe={ recipe }\n              recipeId={ recipeId }\n              recipeIsDone={ this.verifyRecipeIsDone }\n            />\n          )}\n        </ul>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ isDone }\n          onClick={ this.handleButtonClick }\n        >\n          Finalizar receita\n        </button>\n      </div>\n    );\n  }\n}\n\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeInProgress;\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <p>Not Found</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { CustomButtonShare } from '.';\n\nclass CustomCardRecipeDone extends Component {\n  render() {\n    const { index, recipe } = this.props;\n    return (\n      <div>\n        <p data-testid={ `${index}-horizontal-done-date` }>{recipe.doneDate}</p>\n        <p data-testid={ `${index}-horizontal-top-text` }>\n          {recipe.type === 'comida'\n            ? `${recipe.area} - ${recipe.category}`\n            : recipe.alcoholicOrNot}\n        </p>\n        <Link to={ `/${recipe.type}s/${recipe.id}` }>\n          <img\n            style={ { width: '30%' } }\n            data-testid={ `${index}-horizontal-image` }\n            src={ recipe.image }\n            alt=\"\"\n          />\n          <p data-testid={ `${index}-horizontal-name` }>{recipe.name}</p>\n        </Link>\n        {recipe.tags.length > 1 ? (\n          recipe.tags.map((item) => (\n            <p key={ index } data-testid={ `${index}-${item}-horizontal-tag` }>\n              Tag:\n              {item}\n            </p>\n          ))\n        ) : (\n          <p data-testid={ `${index}-${recipe.tags}-horizontal-tag` }>\n            Tag:\n            {' '}\n            {recipe.tags}\n          </p>\n        )}\n        <CustomButtonShare\n          url={ `/${recipe.type}s/${recipe.id}` }\n          testDone\n          index={ index }\n        />\n      </div>\n    );\n  }\n}\n\nCustomCardRecipeDone.propTypes = {\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    tags: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    map: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default CustomCardRecipeDone;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomHeader from '../components/CustomHeader';\nimport CustomCardRecipeDone from '../components/CustomCardRecipeDone';\nimport { getStorage } from '../services';\n\nclass DoneRecipes extends Component {\n  constructor() {\n    super();\n    this.filterDoneRecipes = this.filterDoneRecipes.bind(this);\n    this.renderRecipes = this.renderRecipes.bind(this);\n    this.state = {\n      Done: [],\n    };\n  }\n\n  filterDoneRecipes({ target: { value } }) {\n    const { Done } = this.state;\n    console.log(Done);\n    this.setState({\n      Done: value,\n    });\n  }\n\n  renderRecipes() {\n    const filterDone = getStorage('doneRecipes');\n    const { Done } = this.state;\n    console.log(filterDone, 'filteredDone');\n    const LENGTH = 12;\n    const INITIAL_LENGTH = 0;\n    if (!filterDone) return <p>Ainda não há receitas feitas</p>;\n    const MAX_LENGTH = filterDone.length > LENGTH ? LENGTH : filterDone.length;\n    if (!filterDone.length) return <p> Receita falsificada </p>;\n    return (\n      <div>\n        {(filterDone.filter((item) => item.type.includes(Done)))\n          .slice(INITIAL_LENGTH, MAX_LENGTH)\n          .map((recipe, index) => (\n            <CustomCardRecipeDone\n              recipe={ recipe }\n              recipeType={ recipe.recipeType }\n              key={\n                recipe.recipeType === 'comidas' ? recipe.idMeal : recipe.idDrink\n              }\n              index={ index }\n            />\n          ))}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <CustomHeader title=\"Receitas Feitas\" />\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ this.filterDoneRecipes }\n          value=\"\"\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ this.filterDoneRecipes }\n          value=\"comida\"\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ this.filterDoneRecipes }\n          value=\"bebida\"\n        >\n          Drinks\n        </button>\n        {this.renderRecipes()}\n      </div>\n    );\n  }\n}\n\nDoneRecipes.propTypes = {\n  recipes: PropTypes.shape({\n    length: PropTypes.number.isRequired,\n    slice: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default (DoneRecipes);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Login,\n  Recipes,\n  RecipeDetails,\n  DrinksIngredients,\n  FoodsIngredients,\n  ExploreDrinks,\n  ExploreFoods,\n  Explore,\n  FoodsOrigin,\n  Profile,\n  FavoriteRecipes,\n  RecipeInProgress,\n  NotFound,\n  DoneRecipes,\n} from './pages';\n\nfunction Rotas() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route\n        exact\n        path=\"/comidas\"\n        render={ (props) => <Recipes { ...props } type=\"comidas\" /> }\n      />\n      <Route\n        exact\n        path=\"/bebidas\"\n        render={ (props) => <Recipes { ...props } type=\"bebidas\" /> }\n      />\n      <Route exact path=\"/comidas/:id/in-progress\" component={ RecipeInProgress } />\n      <Route exact path=\"/bebidas/:id/in-progress\" component={ RecipeInProgress } />\n      <Route exact path=\"/comidas/:id\" component={ RecipeDetails } />\n      <Route path=\"/bebidas/:id\" component={ RecipeDetails } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n      <Route exact path=\"/explorar/comidas/ingredientes\" component={ FoodsIngredients } />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ DrinksIngredients }\n      />\n      <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route\n        exact\n        path=\"/explorar/comidas/area\"\n        render={ (props) => <FoodsOrigin { ...props } type=\"comidas\" /> }\n      />\n      <Route exact path=\"/perfil\" component={ Profile } />\n      <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route path=\"/receitas-feitas\" component={ DoneRecipes } />\n    </Switch>\n  );\n}\n\nexport default Rotas;\n","import React from 'react';\nimport Routes from './Routes';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import { ADD_EMAIL, ADD_PASSWORD } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nexport default function loginReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_EMAIL:\n    return { ...state, email: action.email };\n  case ADD_PASSWORD:\n    return { ...state, password: action.password };\n  default:\n    return state;\n  }\n}\n","import {\n  REQUEST_RECIPES,\n  LIST_RECIPES,\n  REQUEST_FAILED,\n  FILTERED_BY_CATEGORY,\n  REQUEST_INGREDIENTS,\n  REQUEST_AREA,\n  REQUEST_AREA_FAILED,\n  SELECT_AREA,\n  CHANGE_RECIPE_TYPE,\n  CHANGE_CURRENT_CATEGORY,\n  CHANGE_SEARCH_BAR,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  recipeType: 'comidas',\n  isFetching: true,\n  recipes: [],\n  currentCategory: 'all',\n  error: false,\n  done: [],\n  isSearchBar: false,\n};\n\nconst recipesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FILTERED_BY_CATEGORY:\n    return {\n      ...state,\n      recipes: (!action.filteredByCategory) ? [] : action.filteredByCategory,\n      isFetching: false,\n    };\n  case CHANGE_CURRENT_CATEGORY:\n    return {\n      currentCategory: action.category.strCategory,\n    };\n  case CHANGE_RECIPE_TYPE:\n    return {\n      ...state,\n      recipeType: action.recipeType,\n    };\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case LIST_RECIPES:\n    return {\n      ...state,\n      recipes: (!action.recipes) ? [] : action.recipes,\n      isFetching: false,\n      currentCategory: 'all',\n    };\n  case REQUEST_FAILED:\n    return { ...state, error: true, isFetching: false };\n  case REQUEST_AREA:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case REQUEST_AREA_FAILED:\n    return { ...state, error: true };\n  case SELECT_AREA:\n    return {\n      ...state,\n      recipes: action.meals,\n      isFetching: false,\n    };\n  case CHANGE_SEARCH_BAR:\n    return {\n      ...state,\n      isSearchBar: true,\n    };\n  default:\n    return state;\n  case REQUEST_INGREDIENTS:\n    return { ...state, currentCategory: action.ingredients };\n  }\n};\n\nexport default recipesReducer;\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  loginReducer,\n  recipesReducer,\n} from '../redux/reducer';\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  recipesReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}